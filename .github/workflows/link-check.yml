# リンクチェックを実行するCI
name: Link check CI

on:
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        filename: link-check-result.txt

    steps:
      - uses: actions/checkout@v2

      # Gitの初期設定
      - name: Git setting
        run: |
          git config --local user.email ${{ secrets.REPOSITORY_OWNER_EMAIL }}
          git config --local user.name ${{ github.repository_owner }}
          git checkout feature/execLinkCheck
      
      # Node.js セットアップ
      # LTSの最新は14系なのでとりあえずそれで指定
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # 必要なパッケージのインストール
      - name: Install package
        run: npm install broken-link-checker -g

      # 実行テスト
      - name: Print help and version
        run: |
          blc --help
          blc --version

      # リンクチェック実行
      # あとは出力結果を保存してコミットしてしまえばいいか。
      # 最後にBROKENの数をファイルからカウントして1つ以上あればCIをコケさせれば
      # GitHubから失敗した旨のメールが送信されるので通知はそれでいいかな。
      - name: Exec link-check
        run: |
          FILENAME=${{ matrix.filename }}
          touch $FILENAME
          echo Checked_date $(date '+%Y-%m-%d %H:%M:%S') >> $FILENAME
          echo "-----------------------" >> $FILENAME
          while read url
          do
            echo Getting links from "$url" >> $FILENAME
            # blc "$url" | grep BROKEN >> $FILENAME
            echo -----BROKEN-----hogehoge >> $FILENAME # テスト用
            echo "-----------------------" >> $FILENAME
          done < post-list.txt
      
      # 結果はファイルで残しておく
      - name: Commit result
        run: |
          git add ${{ matrix.filename }}
          git commit -m "Update result"
          git push
      
      # エラーハンドリング用の結果を控えておく
      - name: Check broken count
        id: BrokenCheck
        run: |
          echo "::set-output name=count::$(cat ${{ matrix.filename }} | grep BROKEN | wc -l)"

      # リンクチェックの結果次第でCIをエラーにする
      - name: Error Handling
        run: |
          exit 1
        if: steps.BrokenCheck.outputs.count > 0
