# リンクチェックを実行するCI
name: Link check CI

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      RESULT_FILE: link-check-result.txt

    steps:
      - uses: actions/checkout@v2

      # Gitの初期設定
      - name: Git setting
        run: sh ./scripts/git_settings.sh
        env:
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          REPOSITORY_OWNER_EMAIL: ${{ secrets.REPOSITORY_OWNER_EMAIL }}
      
      # Node.js セットアップ
      # LTSの最新は14系なのでとりあえずそれで指定
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      # 必要なパッケージのインストール
      - name: Install package
        run: npm ci

      # 実行テスト
      # バージョンが変わったときのためにこの出力は残しておくか
      - name: Print version
        run: |
          npx blc --version

      # リンクチェック実行
      # grepのヒット数が0件だとワークフローがエラーで止まってしまうので
      # ちょっと無駄かもですがif文を挟んでヒットするかチェックするようにしています
      - name: Exec link-check
        id: linkCheck
        run: |
          set +e
          status=0
          touch $RESULT_FILE
          echo Checked_date $(TZ=Asia/Tokyo date '+%Y-%m-%d %H:%M:%S(%z)') > $RESULT_FILE
          echo "=========================" >> $RESULT_FILE
          echo >> $RESULT_FILE
          while read url
          do
            npx blc "$url" > tmp.txt || {
              status=$?
              echo "Fail {$status}"
              echo "Target {$url}"
            }
            if [ "`cat tmp.txt | grep 'BROKEN'`" ]; then
              echo Getting links from "$url" >> $RESULT_FILE
              cat tmp.txt | grep 'BROKEN' >> $RESULT_FILE
              echo "-----------------------" >> $RESULT_FILE
              echo >> $RESULT_FILE
            fi
          done < post-list.txt
          echo "status {$status}"
          echo "::set-output name=status::$status"

      # 結果はActions上だと見にくかったのでファイルで残しておく
      # 最新の結果さえあれば良いので同じファイルを更新していく
      # historyはGithubで確認できるので十分
      - name: Commit result
        run: |
          git add $RESULT_FILE
          git commit -m "Update $RESULT_FILE"
          git push

      # リンクチェックの結果次第でCIをエラーにする
      # TODO: Issue立てたりできたほうがいいかな・・・まあそのうち
      - name: Error Handling
        run: |
          exit 1
        if: steps.linkCheck.outputs.status != 0
