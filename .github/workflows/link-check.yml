# リンクチェックを実行するCI
name: Link check CI

on:
  schedule:
    - cron: "0 22 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      URL_LIST_FILE: post-list.txt
      RESULT_FILE: link-check-result.md

    steps:
      - uses: actions/checkout@v3
      
      # Node.js セットアップ
      # LTSの最新は16系なのでとりあえずそれで指定
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      # 必要なパッケージのインストール
      - name: Install dependencies
        run: npm ci

      # 実行テスト
      # バージョンが変わったときのためにこの出力は残しておくか
      - name: Print version
        run: |
          npx blc --version

      # サイトマップからURLリスト作成
      - name: Create URL list
        run: |
          curl -fsSL https://jpsern.com/sitemap.xml | grep -v "/categories/" | grep -v "/tags/" | grep "<loc" | sed -e "s/^.*<loc>//g;s/<\/loc>.*$//g" > $URL_LIST_FILE

      # 結果ファイルやIssueに使う日付文字列の作成
      # https://stackoverflow.com/questions/60942067/get-current-date-and-time-in-github-workflows
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(TZ=Asia/Tokyo date '+%Y-%m-%d %H:%M:%S(%z)')"

      # リンクチェック実行
      - name: Exec link-check
        id: linkCheck
        run: |
          set +e
          status=0
          touch $RESULT_FILE
          echo "|Checked date|Actions url|" > $RESULT_FILE
          echo "|---|---|" >> $RESULT_FILE
          echo "|***${{ steps.date.outputs.date }}***|${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|" >> $RESULT_FILE
          echo \# Link check result >> $RESULT_FILE
          TARGET_COUNT=$(cat $URL_LIST_FILE | grep -c ^)
          COUNTER=1
          while read url
          do
            echo "[ $COUNTER/$TARGET_COUNT ]"
            npx blc -gi --requests 1 \
              --exclude 'twitter.com/tommy0157/status' \
              --exclude 'docs.github.com' \
              --user-agent "Mozilla/5.0 (iPhone; CPU iPhone OS 14_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.1.1 Mobile/15E148 Safari/604.1" \
              --filter-level 0 "$url" > tmp.txt || {
              status=$?
              echo "Fail {$status}"
              echo "Target {$url}"
              echo \#\# Target URL >> $RESULT_FILE
              echo "$url" >> $RESULT_FILE
              if [ "`cat tmp.txt | grep 'BROKEN'`" ]; then
                echo \#\#\# Broken >> $RESULT_FILE
                cat tmp.txt | grep 'BROKEN' | cut -c17- | sed "s/^/\* /g" >> $RESULT_FILE
              fi
              if [ "`cat tmp.txt | grep 'ERROR' --ignore-case`" ]; then
                echo \#\#\# Error >> $RESULT_FILE
                cat tmp.txt | grep 'ERROR' --ignore-case | cut -c8- >> $RESULT_FILE
              fi
              echo >> $RESULT_FILE

              # BROKEN がなくてもエラーになるケースが稀にある
              # Actions上に表示してデバッグするためcatする
              cat tmp.txt
            }
            let COUNTER=COUNTER+1
          done < $URL_LIST_FILE
          if [ $status -eq 0 ]; then
            echo "All external links operational" >> $RESULT_FILE
          fi
          echo "status {$status}"
          echo "::set-output name=status::$status"

      # リンクチェックが失敗した場合はIssueを発行する
      - name: Create Issue
        run: |
          node .github/scripts/create-issue.js
        env:
          GITHUB_TOKEN: ${{ secrets.BLC_ACCESS_TOKEN }}
          TARGET_REPO: ${{ secrets.BLOG_REPOSITORY }}
          CURRENT_DATE: ${{ steps.date.outputs.date }}
        if: steps.linkCheck.outputs.status != 0

      # リンクチェックが成功した場合は過去のIssueをクローズする
      - name: Close Issue
        run: |
          node .github/scripts/close-issue.js
        env:
          GITHUB_TOKEN: ${{ secrets.BLC_ACCESS_TOKEN }}
          TARGET_REPO: ${{ secrets.BLOG_REPOSITORY }}
        if: steps.linkCheck.outputs.status == 0

      - name: Send Chatwork
        run: |
          node .github/scripts/chatwork.js
        env:
          CHATWORK_TOKEN: ${{ secrets.CHATWORK_TOKEN }}
          CHATWORK_ROOMID: ${{ secrets.CHATWORK_ROOMID }}
          GITHUB_TOKEN: ${{ secrets.BLC_ACCESS_TOKEN }}
          TARGET_REPO: ${{ secrets.BLOG_REPOSITORY }}
        if: steps.linkCheck.outputs.status != 0
